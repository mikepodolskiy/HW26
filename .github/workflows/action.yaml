name: Build and deploy action
on: [push]
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: docker build
        run: docker build -t ${{ secrets.GIT_PATH }}:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker login
        run: echo ${{ secrets.DOCKER_TOKEN}} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: docker push
        run: docker push ${{ secrets.GIT_PATH }}:$GITHUB_REF_NAME-$GITHUB_RUN_ID
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: render config
        run: |
          mkdir deploy
          export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          export DB_USER=${{ secrets.DB_USER }}
          export DB_NAME=${{ secrets.DB_NAME }}
          export GIT_PATH=${{ secrets.GIT_PATH }}
          at docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
      - name: copy files to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USERNAME }}
          password: ${{ secrets.HOST_USER_PASSWORD }}
          source: "deploy/docker-compose.yaml"
          target: "deploy"
          strip_components: 1
      - name: deploy app
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USERNAME }}
          password: ${{ secrets.HOST_USER_PASSWORD }}
          port: 25000
          script: |
            cd deploy
            echo ${{ secrets.HOST_USER_PASSWORD }} | sudo -S docker-compose up -d